apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.ninjax.weather"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        switch (variant.getName()) {
            case "debug":
                variant.buildConfigField "String", "API_URL", '"https://api.openweathermap.org/data/2.5/"'
                variant.buildConfigField "String", "API_WEATHER_KEY", '"bc9c8172593bed5c94db8cb512daa662"'
        }
    }

    lintOptions {
        abortOnError false
        lintConfig file('lint.xml')
        xmlOutput file("${buildDir}/reports/lint-results.xml")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    // Common
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'

    // Navigation
//    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
//    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_interceptor"

    // Room
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    kapt "androidx.room:room-compiler:$room"

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$arch_version"
//    implementation "androidx.lifecycle:lifecycle-extensions:$arch_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$arch_version"
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$arch_version"

    // Koin for Android
    implementation "org.koin:koin-android:$koin"
    implementation "org.koin:koin-androidx-viewmodel:$koin"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    // Unit test
    testImplementation 'junit:junit:4.12'
}
